#include <iostream>

int main()
{
	// 바이트의 저장방식
	// 리틀엔디안, 빅엔디안 
	// 리틀엔디안 : 낮은주소의 데이터에 낮은 바이트부터 저장한다. 
	// 빅엔디안   : 낮은주소의 데이터에 높은 바이트부터 저장한다. ( 사람이주로 사용하는 선형방식 ) 

	int iTest = 1;

	// 아래 포인터변수를 형변환하여 char* 타입 변수에 저장하고
	// 포인터연산을 사용하여 1바이트씩 메모리를 확인하게 되면 낮은 주소의 메모리에 1의 값이 저장되게 된다. 
	int* pTest = &iTest;
	char* pCast = (char*)pTest;

	// 포인터연산을 활용한 주소값 이동으로 확인 
	// 0b 00000000 00000000 00000000 00000001 
	// 예상대로라면 이 값이 순서대로 저장되어 각각 0 , 0 , 0 , 1 이 저장되어야 한다고 생각이 든다. 
	// 하지만 실제 저장되는 값은  1, 0 , 0, 0 이다. 
	char Test1 = *(pCast + 0);
	char Test2 = *(pCast + 1);
	char Test3 = *(pCast + 2);
	char Test4 = *(pCast + 3);

	// 이유는 데이터를 주고받는 방식이 리틀엔디안 방식이기 때문이다. 
	// 리틀엔디아능로 저장하는 이유는 컴퓨터의 계산에 더 유리하기 때문이다. 
	
	// 빅엔디안 방식이라면 사람이 보는 방식인 선형방식으로
	// 0b 00000000 00000000 00000000 00000001 로 저장이 될 것이다. 
	
	
	return 0;
}